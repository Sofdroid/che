This is the staging directory for Eclipse Che plug-ins. Che packages extensions and plug-ins into 
Web application packages that are then deployed by Che. The location of your plug-ins determines
how your plug-ins will be packaged and deployed. This program can also be used to generate new
Che assemblies that can be installed and distributed by others.

Run bin/che-intsall-plugin to create new Che packages and assemblies with your plug-ins.

Place plug-in JARs & ZIPs:

  /plugins/ide        : IDE extension, compiled with GWT & packaged into new ws-master Web application.
  /plugins/ws-master  : Server-side extension & packaged into new ws-master Web application with IDE.
  /plugins/ws-agent   : Server-side extension that runs in workspace machine & packaged into new ws-agent Web application.
  /plugins/           : Packaged in both ws-master and ws-agent Web applications. (Not Recommended)

You extension is compiled into one of two web applications:
  1. Workspace master 
  2. Workspace agent

The workspace master is deployed into the core Che server. The workspace agent is deployed into the machine 
powering each workspace created by your users. Each workspace agent is unique to the workspace that created it.  
While you can deploy plug-ins into both locations, this is costly at compile and runtime.

The Che assembly construction goes through the following stages:

1. Che installs your plug-in JARs into a local maven repository.

2. Che creates staging modules in temporary directories to build new Web applications:
   /sdk/assembly-ide-war/temp                        --> Where ws-master web app will be generated
   /sdk/assembly-machine-war/temp                    --> Where ws-agent web app will generated

3. Your plug-ins are added as dependencies to the maven pom.xml in each staging module. 

4. The new Web applications are compiled and packaged into WARs:
    mvn sortpom:sort
    mvn -Denforcer.skip=true clean package install -Dskip-validate-sources=true

5. If your plug-ins are added into a workspace agent Web app, Che also creates a new ws-agent.zip:
   /sdk/assembly-machine-server                     --> Packages ws agent Web app w/ Tomcat into ws-agent.zip.
   mvn -Denforcer.skip=true clean package install 

6. The new Web applications are copied into your core Che assembly, overwriting old version: 
   /sdk/assembly-ide-war/temp/target/*.war          --> /tomcat/webapps
   /sdk/assembly-machine-server/target/*.zip        --> /lib/ws-agent.zip
   Use --skip:update to avoid overwriting existing files.
   
7. If --assembly, then Che also creates a new distributable package of Che:
   /sdk/assembly-main
   mvn clean package
